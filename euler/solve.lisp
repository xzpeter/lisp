(in-package :xzlib)

(defun multiple-p (v n)
  "whether v is the multiple of n?"
  (= (mod v n) 0))

(defun prime (n)
  "return the prime factors of number n"
  (cond
	((not (integerp n)) (error "~a not integer!" n))
	((= n 1) nil)
	((= n 2) '(2))
	((= n 3) '(3))
	(t
	 (loop for i from (floor (sqrt n)) downto 2
		finally (return (list n)) 
		do
		  (when (= 0 (mod n i))
			(return (append (prime i) (prime (/ n i)))))))))


;; If we list all the natural numbers below 10 that are multiples of 3 or
;; 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.  Find the
;; sum of all the multiples of 3 or 5 below 1000.
(defun p1 (n)
  "when n=10 should be 23, we need n=1000 result"
  (loop for i from 1 below n
	 when (or (multiple-p i 3) (multiple-p i 5))
	 sum i))

;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms will
;; be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...  By considering the terms in
;; the Fibonacci sequence whose values do not exceed four million, find
;; the sum of the even-valued terms.
(defun p2 (limit)
  "result should be limit=400000 case"
  (loop with a = 1 and b = 2 and sum = 0
	 do (progn
		  (when (> b limit)
			(return sum))
		  (when (evenp b)
			(incf sum b))
		  (shiftf a b (+ a b)))))

;; The prime factors of 13195 are 5, 7, 13 and 29.
;; What is the largest prime factor of the number 600851475143 ?
(defun p3 ())
